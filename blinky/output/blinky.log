
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2016  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.7+377 (git sha1 68e2bdf, gcc 5.4.0-6ubuntu1~16.04.4 -O3 -DNDEBUG -fPIC -fno-builtin-malloc -fno-builtin-free -fno-builtin-realloc -fno-builtin-calloc -fno-builtin-cfree -fno-builtin-valloc -fno-builtin-pvalloc -fno-builtin-memalign -fno-builtin-posix_memalign)


-- Parsing `Blinky.v' using frontend `verilog' --

1. Executing Verilog-2005 frontend.
Parsing Verilog input from `Blinky.v' to AST representation.
Successfully finished Verilog frontend.

-- Parsing `prom.v' using frontend `verilog' --

2. Executing Verilog-2005 frontend.
Parsing Verilog input from `prom.v' to AST representation.
Warning: Identifier `\write_decoderA_Dout' is implicitly declared at prom.v:22.
Warning: Identifier `\read_andA_Dout' is implicitly declared at prom.v:33.
Warning: Identifier `\read_invA_Dout' is implicitly declared at prom.v:41.
Note: Assuming pure combinatorial block at prom.v:110 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

-- Parsing `ram4k.v' using frontend `verilog' --

3. Executing Verilog-2005 frontend.
Parsing Verilog input from `ram4k.v' to AST representation.
Successfully finished Verilog frontend.

-- Parsing `ram-bb.v' using frontend `verilog' --

4. Executing Verilog-2005 frontend.
Parsing Verilog input from `ram-bb.v' to AST representation.
Successfully finished Verilog frontend.

-- Running command `synth_agm -top Blinky -vqm Blinky.vqm' --
Running command synth_agm -top Blinky -vqm Blinky.vqm

5. Executing SYNTH_INTEL pass.
Running command read_verilog -sv -lib +/agm/rodina/cells_sim.v

5.1. Executing Verilog-2005 frontend.
Parsing SystemVerilog input from `/home/swhite/agm/Supra-2019.03.b0/map/bin/../share/agm/rodina/cells_sim.v' to AST representation.
Successfully finished Verilog frontend.
Running command read_verilog -sv -lib +/agm/common/m9k_bb.v

5.2. Executing Verilog-2005 frontend.
Parsing SystemVerilog input from `/home/swhite/agm/Supra-2019.03.b0/map/bin/../share/agm/common/m9k_bb.v' to AST representation.
Successfully finished Verilog frontend.
Running command read_verilog -sv -lib +/agm/common/altpll_bb.v

5.3. Executing Verilog-2005 frontend.
Parsing SystemVerilog input from `/home/swhite/agm/Supra-2019.03.b0/map/bin/../share/agm/common/altpll_bb.v' to AST representation.
Successfully finished Verilog frontend.
Running command hierarchy -check -top Blinky

5.4. Executing HIERARCHY pass (managing design hierarchy).

5.4.1. Analyzing design hierarchy..
Top module:  \Blinky

5.4.2. Analyzing design hierarchy..
Top module:  \Blinky

5.4.3. Analyzing design hierarchy..
Top module:  \Blinky
Removed 1 unused modules.
Warning: Resizing cell port prom.prom_0_6526DEFE.AddressA from 8 bits to 7 bits.
Warning: Resizing cell port Blinky.mem.AddressA from 7 bits to 8 bits.
Running command proc

5.5. Executing PROC pass (convert processes to netlists).
Running command proc_clean

5.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:103$170'.
Found and cleaned up 1 empty switch in `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:103$163'.
Found and cleaned up 2 empty switches in `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:84$145'.
Found and cleaned up 2 empty switches in `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:84$127'.
Found and cleaned up 1 empty switch in `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:67$120'.
Found and cleaned up 1 empty switch in `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:67$113'.
Cleaned up 8 empty switches.
Running command proc_rmdead

5.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.
Running command proc_init

5.5.3. Executing PROC_INIT pass (extract init attributes).
Running command proc_arst

5.5.4. Executing PROC_ARST pass (detect async resets in processes).
Running command proc_mux

5.5.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Running command proc_dlatch

5.5.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$func$\portDataOut$ram4k.v:45$98$\portDataOut' from process `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:103$170'.
No latch inferred for signal `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$func$\portDataOut$ram4k.v:45$108$\portDataOut' from process `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:103$170'.
No latch inferred for signal `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$func$\portDataOut$ram4k.v:45$108$\data_width' from process `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:103$170'.
No latch inferred for signal `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$func$\portDataOut$ram4k.v:45$108$\data' from process `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:103$170'.
No latch inferred for signal `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$func$\portDataOut$ram4k.v:45$108$\data0' from process `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:103$170'.
No latch inferred for signal `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$func$\portDataOut$ram4k.v:44$97$\portDataOut' from process `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:103$163'.
No latch inferred for signal `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$func$\portDataOut$ram4k.v:44$107$\portDataOut' from process `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:103$163'.
No latch inferred for signal `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$func$\portDataOut$ram4k.v:44$107$\data_width' from process `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:103$163'.
No latch inferred for signal `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$func$\portDataOut$ram4k.v:44$107$\data' from process `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:103$163'.
No latch inferred for signal `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$func$\portDataOut$ram4k.v:44$107$\data0' from process `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:103$163'.
No latch inferred for signal `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$func$\portAddr$ram4k.v:42$96$\portAddr' from process `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:84$145'.
No latch inferred for signal `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$func$\portAddr$ram4k.v:42$106$\portAddr' from process `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:84$145'.
No latch inferred for signal `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$func$\portAddr$ram4k.v:42$106$\addr_width' from process `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:84$145'.
No latch inferred for signal `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$func$\portAddr$ram4k.v:42$106$\addr' from process `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:84$145'.
No latch inferred for signal `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$func$\portAddr$ram4k.v:42$106$\byte_width' from process `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:84$145'.
No latch inferred for signal `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$func$\portAddr$ram4k.v:42$106$\byteEn' from process `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:84$145'.
No latch inferred for signal `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$func$\portAddr$ram4k.v:42$106$\portId' from process `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:84$145'.
No latch inferred for signal `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$func$\portAddr$ram4k.v:42$106$\addr0' from process `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:84$145'.
No latch inferred for signal `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$func$\portAddr$ram4k.v:42$106$\byteEn0' from process `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:84$145'.
No latch inferred for signal `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$func$\portAddr$ram4k.v:41$95$\portAddr' from process `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:84$127'.
No latch inferred for signal `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$func$\portAddr$ram4k.v:41$105$\portAddr' from process `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:84$127'.
No latch inferred for signal `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$func$\portAddr$ram4k.v:41$105$\addr_width' from process `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:84$127'.
No latch inferred for signal `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$func$\portAddr$ram4k.v:41$105$\addr' from process `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:84$127'.
No latch inferred for signal `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$func$\portAddr$ram4k.v:41$105$\byte_width' from process `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:84$127'.
No latch inferred for signal `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$func$\portAddr$ram4k.v:41$105$\byteEn' from process `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:84$127'.
No latch inferred for signal `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$func$\portAddr$ram4k.v:41$105$\portId' from process `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:84$127'.
No latch inferred for signal `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$func$\portAddr$ram4k.v:41$105$\addr0' from process `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:84$127'.
No latch inferred for signal `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$func$\portAddr$ram4k.v:41$105$\byteEn0' from process `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:84$127'.
No latch inferred for signal `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$func$\portDataIn$ram4k.v:40$94$\portDataIn' from process `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:67$120'.
No latch inferred for signal `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$func$\portDataIn$ram4k.v:40$104$\portDataIn' from process `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:67$120'.
No latch inferred for signal `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$func$\portDataIn$ram4k.v:40$104$\data_width' from process `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:67$120'.
No latch inferred for signal `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$func$\portDataIn$ram4k.v:40$104$\data' from process `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:67$120'.
No latch inferred for signal `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$func$\portDataIn$ram4k.v:40$104$\data0' from process `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:67$120'.
No latch inferred for signal `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$func$\portDataIn$ram4k.v:39$93$\portDataIn' from process `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:67$113'.
No latch inferred for signal `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$func$\portDataIn$ram4k.v:39$103$\portDataIn' from process `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:67$113'.
No latch inferred for signal `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$func$\portDataIn$ram4k.v:39$103$\data_width' from process `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:67$113'.
No latch inferred for signal `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$func$\portDataIn$ram4k.v:39$103$\data' from process `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:67$113'.
No latch inferred for signal `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$func$\portDataIn$ram4k.v:39$103$\data0' from process `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:67$113'.
No latch inferred for signal `\promA_Mux36to36.\Dout' from process `\promA_Mux36to36.$proc$prom.v:110$5'.
Running command proc_dff

5.5.7. Executing PROC_DFF pass (convert process syncs to FFs).
Running command proc_clean

5.5.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:103$170'.
Removing empty process `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:103$163'.
Removing empty process `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:84$145'.
Removing empty process `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:84$127'.
Removing empty process `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:67$120'.
Removing empty process `$paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.$proc$ram4k.v:67$113'.
Removing empty process `promA_Mux36to36.$proc$prom.v:110$5'.
Removing empty process `Blinky.$proc$Blinky.v:19$1'.
Cleaned up 0 empty switches.
Running command flatten

5.6. Executing FLATTEN pass (flatten design).
No more expansions possible.
Deleting now unused module $paramod$e7f6411a1c722f9b276e2e8c07e5c8aca77df475\alta_ram4k.
Deleting now unused module promA_Register0.
Deleting now unused module promA_Decoder0to1.
Deleting now unused module promA_Mux36to36.
Deleting now unused module readAndAand2.
Deleting now unused module promA_not1.
Deleting now unused module prom.
Running command tribuf -logic

5.7. Executing TRIBUF pass.
Running command deminout

5.8. Executing DEMINOUT pass (demote inout ports to input or output).
Running command synth -run coarse

5.9. Executing SYNTH pass.
Running command proc

5.9.1. Executing PROC pass (convert processes to netlists).
Running command proc_clean

5.9.1.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.
Running command proc_rmdead

5.9.1.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.
Running command proc_init

5.9.1.3. Executing PROC_INIT pass (extract init attributes).
Running command proc_arst

5.9.1.4. Executing PROC_ARST pass (detect async resets in processes).
Running command proc_mux

5.9.1.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Running command proc_dlatch

5.9.1.6. Executing PROC_DLATCH pass (convert process syncs to latches).
Running command proc_dff

5.9.1.7. Executing PROC_DFF pass (convert process syncs to FFs).
Running command proc_clean

5.9.1.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.
Running command opt_expr

5.9.2. Executing OPT_EXPR pass (perform const folding).
Running command opt_clean

5.9.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Blinky..
  removed 126 unused temporary wires.
Removed 1 unused cells and 126 unused wires.
Running command check

5.9.4. Executing CHECK pass (checking for obvious problems).
checking module Blinky..
Warning: Wire Blinky.\mem.prom_0_6526DEFE.portWeRenA is used but has no driver.
Warning: Wire Blinky.\mem.prom_0_6526DEFE.portDataInB [17] is used but has no driver.
Warning: Wire Blinky.\mem.prom_0_6526DEFE.portDataInB [16] is used but has no driver.
Warning: Wire Blinky.\mem.prom_0_6526DEFE.portDataInB [15] is used but has no driver.
Warning: Wire Blinky.\mem.prom_0_6526DEFE.portDataInB [14] is used but has no driver.
Warning: Wire Blinky.\mem.prom_0_6526DEFE.portDataInB [13] is used but has no driver.
Warning: Wire Blinky.\mem.prom_0_6526DEFE.portDataInB [12] is used but has no driver.
Warning: Wire Blinky.\mem.prom_0_6526DEFE.portDataInB [11] is used but has no driver.
Warning: Wire Blinky.\mem.prom_0_6526DEFE.portDataInB [10] is used but has no driver.
Warning: Wire Blinky.\mem.prom_0_6526DEFE.portDataInB [9] is used but has no driver.
Warning: Wire Blinky.\mem.prom_0_6526DEFE.portDataInB [8] is used but has no driver.
Warning: Wire Blinky.\mem.prom_0_6526DEFE.portDataInB [7] is used but has no driver.
Warning: Wire Blinky.\mem.prom_0_6526DEFE.portDataInB [6] is used but has no driver.
Warning: Wire Blinky.\mem.prom_0_6526DEFE.portDataInB [5] is used but has no driver.
Warning: Wire Blinky.\mem.prom_0_6526DEFE.portDataInB [4] is used but has no driver.
Warning: Wire Blinky.\mem.prom_0_6526DEFE.portDataInB [3] is used but has no driver.
Warning: Wire Blinky.\mem.prom_0_6526DEFE.portDataInB [2] is used but has no driver.
Warning: Wire Blinky.\mem.prom_0_6526DEFE.portDataInB [1] is used but has no driver.
Warning: Wire Blinky.\mem.prom_0_6526DEFE.portDataInB [0] is used but has no driver.
Warning: Wire Blinky.\mem.prom_0_6526DEFE.portDataInA [17] is used but has no driver.
Warning: Wire Blinky.\mem.prom_0_6526DEFE.portDataInA [16] is used but has no driver.
Warning: Wire Blinky.\mem.prom_0_6526DEFE.portDataInA [15] is used but has no driver.
Warning: Wire Blinky.\mem.prom_0_6526DEFE.portDataInA [14] is used but has no driver.
Warning: Wire Blinky.\mem.prom_0_6526DEFE.portDataInA [13] is used but has no driver.
Warning: Wire Blinky.\mem.prom_0_6526DEFE.portDataInA [12] is used but has no driver.
Warning: Wire Blinky.\mem.prom_0_6526DEFE.portDataInA [11] is used but has no driver.
Warning: Wire Blinky.\mem.prom_0_6526DEFE.portDataInA [10] is used but has no driver.
Warning: Wire Blinky.\mem.prom_0_6526DEFE.portDataInA [9] is used but has no driver.
Warning: Wire Blinky.\mem.prom_0_6526DEFE.portDataInA [8] is used but has no driver.
Warning: Wire Blinky.\mem.prom_0_6526DEFE.portDataInA [7] is used but has no driver.
Warning: Wire Blinky.\mem.prom_0_6526DEFE.portDataInA [6] is used but has no driver.
Warning: Wire Blinky.\mem.prom_0_6526DEFE.portDataInA [5] is used but has no driver.
Warning: Wire Blinky.\mem.prom_0_6526DEFE.portDataInA [4] is used but has no driver.
Warning: Wire Blinky.\mem.prom_0_6526DEFE.portDataInA [3] is used but has no driver.
Warning: Wire Blinky.\mem.prom_0_6526DEFE.portDataInA [2] is used but has no driver.
Warning: Wire Blinky.\mem.prom_0_6526DEFE.portDataInA [1] is used but has no driver.
Warning: Wire Blinky.\mem.prom_0_6526DEFE.portDataInA [0] is used but has no driver.
Warning: Wire Blinky.\mem.prom_0_6526DEFE.portAsyncReset0 is used but has no driver.
found and reported 38 problems.
Running command opt

5.9.5. Executing OPT pass (performing simple optimizations).
Running command opt_expr

5.9.5.1. Executing OPT_EXPR pass (perform const folding).
Running command opt_merge -nomux

5.9.5.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Blinky'.
Removed a total of 0 cells.
Running command opt_muxtree

5.9.5.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Blinky..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
Running command opt_reduce

5.9.5.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Blinky.
Performed a total of 0 changes.
Running command opt_merge

5.9.5.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Blinky'.
Removed a total of 0 cells.
Running command opt_rmdff

5.9.5.6. Executing OPT_RMDFF pass (remove dff with constant values).
Running command opt_clean

5.9.5.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Blinky..
Removed 1 unused cells and 126 unused wires.
Running command opt_expr

5.9.5.8. Executing OPT_EXPR pass (perform const folding).

5.9.5.9. Finished OPT passes. (There is nothing left to do.)
Running command wreduce

5.9.6. Executing WREDUCE pass (reducing word size of cells).
Running command alumacc

5.9.7. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module Blinky:
  created 1 $alu and 0 $macc cells.
Running command share

5.9.8. Executing SHARE pass (SAT-based resource sharing).
Terminal cells by cell
Running command opt

5.9.9. Executing OPT pass (performing simple optimizations).
Running command opt_expr

5.9.9.1. Executing OPT_EXPR pass (perform const folding).
Running command opt_merge -nomux

5.9.9.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Blinky'.
Removed a total of 0 cells.
Running command opt_muxtree

5.9.9.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Blinky..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
Running command opt_reduce

5.9.9.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Blinky.
Performed a total of 0 changes.
Running command opt_merge

5.9.9.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Blinky'.
Removed a total of 0 cells.
Running command opt_rmdff

5.9.9.6. Executing OPT_RMDFF pass (remove dff with constant values).
Running command opt_clean

5.9.9.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Blinky..
Removed 1 unused cells and 126 unused wires.
Running command opt_expr

5.9.9.8. Executing OPT_EXPR pass (perform const folding).

5.9.9.9. Finished OPT passes. (There is nothing left to do.)
Running command fsm

5.9.10. Executing FSM pass (extract and optimize FSM).
Running command fsm_detect

5.9.10.1. Executing FSM_DETECT pass (finding FSMs in design).
Running command fsm_extract

5.9.10.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Running command fsm_opt

5.9.10.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Running command opt_clean

5.9.10.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Blinky..
Removed 1 unused cells and 126 unused wires.
Running command fsm_opt

5.9.10.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Running command fsm_recode

5.9.10.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Running command fsm_info

5.9.10.7. Executing FSM_INFO pass (dumping all available information on FSM cells).
Running command fsm_map

5.9.10.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Running command opt -fast

5.9.11. Executing OPT pass (performing simple optimizations).
Running command opt_expr

5.9.11.1. Executing OPT_EXPR pass (perform const folding).
Running command opt_merge

5.9.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Blinky'.
Removed a total of 0 cells.
Running command opt_rmdff

5.9.11.3. Executing OPT_RMDFF pass (remove dff with constant values).
Running command opt_clean

5.9.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Blinky..
Removed 1 unused cells and 126 unused wires.

5.9.11.5. Finished fast OPT passes.
Running command memory -nomap

5.9.12. Executing MEMORY pass.
Running command memory_dff

5.9.12.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Running command opt_clean

5.9.12.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Blinky..
Removed 1 unused cells and 126 unused wires.
Running command memory_share

5.9.12.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Running command opt_clean

5.9.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Blinky..
Removed 1 unused cells and 126 unused wires.
Running command memory_collect

5.9.12.5. Executing MEMORY_COLLECT pass (generating $mem cells).
Running command opt_clean

5.9.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Blinky..
Removed 1 unused cells and 126 unused wires.
Running command memory_bram -rules +/agm/common/brams.txt

5.10. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).
Running command techmap -map +/agm/common/brams_map.v

5.11. Executing TECHMAP pass (map to technology primitives).

5.11.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `/home/swhite/agm/Supra-2019.03.b0/map/bin/../share/agm/common/brams_map.v' to AST representation.
Successfully finished Verilog frontend.
No more expansions possible.
Running command opt -fast -mux_undef -undriven -fine -full

5.12. Executing OPT pass (performing simple optimizations).
Running command opt_expr -mux_undef -undriven -fine -full

5.12.1. Executing OPT_EXPR pass (perform const folding).
Running command opt_merge

5.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Blinky'.
Removed a total of 0 cells.
Running command opt_rmdff

5.12.3. Executing OPT_RMDFF pass (remove dff with constant values).
Running command opt_clean

5.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Blinky..
  removed 17 unused temporary wires.
Removed 1 unused cells and 143 unused wires.

5.12.5. Finished fast OPT passes.
Running command memory_map

5.13. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).
Running command opt -undriven -fine

5.14. Executing OPT pass (performing simple optimizations).
Running command opt_expr -undriven -fine

5.14.1. Executing OPT_EXPR pass (perform const folding).
Running command opt_merge -nomux

5.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Blinky'.
Removed a total of 0 cells.
Running command opt_muxtree

5.14.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Blinky..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
Running command opt_reduce -fine

5.14.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Blinky.
Performed a total of 0 changes.
Running command opt_merge

5.14.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Blinky'.
Removed a total of 0 cells.
Running command opt_rmdff

5.14.6. Executing OPT_RMDFF pass (remove dff with constant values).
Running command opt_clean

5.14.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Blinky..
Removed 1 unused cells and 143 unused wires.
Running command opt_expr -undriven -fine

5.14.8. Executing OPT_EXPR pass (perform const folding).

5.14.9. Finished OPT passes. (There is nothing left to do.)
Running command dffsr2dff

5.15. Executing DFFSR2DFF pass (mapping DFFSR cells to simpler FFs).
Running command dff2dffe -direct-match $_DFF_*

5.16. Executing DFF2DFFE pass (transform $dff to $dffe where applicable).
Running command opt -fine

5.17. Executing OPT pass (performing simple optimizations).
Running command opt_expr -fine

5.17.1. Executing OPT_EXPR pass (perform const folding).
Running command opt_merge -nomux

5.17.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Blinky'.
Removed a total of 0 cells.
Running command opt_muxtree

5.17.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Blinky..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
Running command opt_reduce -fine

5.17.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Blinky.
Performed a total of 0 changes.
Running command opt_merge

5.17.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Blinky'.
Removed a total of 0 cells.
Running command opt_rmdff

5.17.6. Executing OPT_RMDFF pass (remove dff with constant values).
Running command opt_clean

5.17.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Blinky..
Removed 1 unused cells and 143 unused wires.
Running command opt_expr -fine

5.17.8. Executing OPT_EXPR pass (perform const folding).

5.17.9. Finished OPT passes. (There is nothing left to do.)
Running command techmap -map +/techmap.v

5.18. Executing TECHMAP pass (map to technology primitives).

5.18.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `/home/swhite/agm/Supra-2019.03.b0/map/bin/../share/techmap.v' to AST representation.
Successfully finished Verilog frontend.
Running command proc; opt -fast

5.18.2. Executing PROC pass (convert processes to netlists).
Running command proc_clean

5.18.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.
Running command proc_rmdead

5.18.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.
Running command proc_init

5.18.2.3. Executing PROC_INIT pass (extract init attributes).
Running command proc_arst

5.18.2.4. Executing PROC_ARST pass (detect async resets in processes).
Running command proc_mux

5.18.2.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Running command proc_dlatch

5.18.2.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\_90_lcu\WIDTH=32.\g' from process `$paramod\_90_lcu\WIDTH=32.$proc$/home/swhite/agm/Supra-2019.03.b0/map/bin/../share/techmap.v:207$393'.
No latch inferred for signal `$paramod\_90_lcu\WIDTH=32.\p' from process `$paramod\_90_lcu\WIDTH=32.$proc$/home/swhite/agm/Supra-2019.03.b0/map/bin/../share/techmap.v:207$393'.
Running command proc_dff

5.18.2.7. Executing PROC_DFF pass (convert process syncs to FFs).
Running command proc_clean

5.18.2.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\_90_lcu\WIDTH=32.$proc$/home/swhite/agm/Supra-2019.03.b0/map/bin/../share/techmap.v:207$393'.
Cleaned up 0 empty switches.

5.18.3. Executing OPT pass (performing simple optimizations).
Running command opt_expr

5.18.3.1. Executing OPT_EXPR pass (perform const folding).
Running command opt_merge

5.18.3.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\_90_lcu\WIDTH=32'.
Removed a total of 0 cells.
Running command opt_rmdff

5.18.3.3. Executing OPT_RMDFF pass (remove dff with constant values).
Running command opt_clean

5.18.3.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\_90_lcu\WIDTH=32..
  removed 67 unused temporary wires.
Removed 32 unused cells and 210 unused wires.

5.18.3.5. Finished fast OPT passes.
No more expansions possible.
Running command opt -full

5.19. Executing OPT pass (performing simple optimizations).
Running command opt_expr -full

5.19.1. Executing OPT_EXPR pass (perform const folding).
Running command opt_merge -nomux

5.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Blinky'.
Removed a total of 0 cells.
Running command opt_muxtree

5.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Blinky..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
Running command opt_reduce -full

5.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Blinky.
Performed a total of 0 changes.
Running command opt_merge

5.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Blinky'.
Removed a total of 0 cells.
Running command opt_rmdff

5.19.6. Executing OPT_RMDFF pass (remove dff with constant values).
Running command opt_clean

5.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Blinky..
  removed 132 unused temporary wires.
Removed 164 unused cells and 342 unused wires.
Running command opt_expr -full

5.19.8. Executing OPT_EXPR pass (perform const folding).

5.19.9. Rerunning OPT passes. (Maybe there is more to do..)
Running command opt_muxtree

5.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Blinky..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
Running command opt_reduce -full

5.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Blinky.
Performed a total of 0 changes.
Running command opt_merge

5.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Blinky'.
Removed a total of 0 cells.
Running command opt_rmdff

5.19.13. Executing OPT_RMDFF pass (remove dff with constant values).
Running command opt_clean

5.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Blinky..
Removed 164 unused cells and 342 unused wires.
Running command opt_expr -full

5.19.15. Executing OPT_EXPR pass (perform const folding).

5.19.16. Finished OPT passes. (There is nothing left to do.)
Running command clean -purge
Removed 0 unused cells and 18 unused wires.
Running command setundef -undriven -zero

5.20. Executing SETUNDEF pass (replace undef values with defined constants).
Running command abc -lut 4

5.21. Executing ABC pass (technology mapping using ABC).

5.21.1. Extracting gate netlist of module `\Blinky' to `<abc-temp-dir>/input.blif'..
Extracted 14 gates and 22 wires to a netlist network with 7 inputs and 7 outputs.

5.21.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").

5.21.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       16
ABC RESULTS:        internal signals:        8
ABC RESULTS:           input signals:        7
ABC RESULTS:          output signals:        7
Running command clean
Removed 0 unused cells and 17 unused wires.
Running command iopadmap -bits -outpad $__outpad I:O -inpad $__inpad O:I

5.22. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Running command techmap -map +/agm/rodina/cells_map.v

5.23. Executing TECHMAP pass (map to technology primitives).

5.23.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `/home/swhite/agm/Supra-2019.03.b0/map/bin/../share/agm/rodina/cells_map.v' to AST representation.
Warning: Identifier `\Q_i' is implicitly declared at /home/swhite/agm/Supra-2019.03.b0/map/bin/../share/agm/rodina/cells_map.v:52.
Warning: Identifier `\Q_i' is implicitly declared at /home/swhite/agm/Supra-2019.03.b0/map/bin/../share/agm/rodina/cells_map.v:58.
Warning: Identifier `\Q_i' is implicitly declared at /home/swhite/agm/Supra-2019.03.b0/map/bin/../share/agm/rodina/cells_map.v:64.
Warning: Identifier `\Q_i' is implicitly declared at /home/swhite/agm/Supra-2019.03.b0/map/bin/../share/agm/rodina/cells_map.v:70.
Warning: Identifier `\Q_i' is implicitly declared at /home/swhite/agm/Supra-2019.03.b0/map/bin/../share/agm/rodina/cells_map.v:116.
Warning: Identifier `\Q_i' is implicitly declared at /home/swhite/agm/Supra-2019.03.b0/map/bin/../share/agm/rodina/cells_map.v:122.
Warning: Identifier `\Q_i' is implicitly declared at /home/swhite/agm/Supra-2019.03.b0/map/bin/../share/agm/rodina/cells_map.v:128.
Warning: Identifier `\Q_i' is implicitly declared at /home/swhite/agm/Supra-2019.03.b0/map/bin/../share/agm/rodina/cells_map.v:134.
Successfully finished Verilog frontend.
No more expansions possible.
Running command dffinit -ff dffeas Q INIT

5.24. Executing DFFINIT pass (set INIT param on FF cells).
Running command clean -purge
Removed 0 unused cells and 108 unused wires.
Running command hierarchy -check

5.25. Executing HIERARCHY pass (managing design hierarchy).

5.25.1. Analyzing design hierarchy..
Top module:  \Blinky

5.25.2. Analyzing design hierarchy..
Top module:  \Blinky
Removed 0 unused modules.
Running command stat

5.26. Printing statistics.

=== Blinky ===

   Number of wires:                 11
   Number of wire bits:            135
   Number of public wires:           8
   Number of public wire bits:     101
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 49
     $not                            1
     alta_bram                       1
     dffeas                          7
     rodina_io_ibuf                  1
     rodina_io_obuf                 32
     rodina_lcell_comb               7

Running command check -noinit

5.27. Executing CHECK pass (checking for obvious problems).
checking module Blinky..
found and reported 0 problems.
Running command write_verilog -attr2comment -defparam -nohex -decimal -bitblasted -renameprefix syn_ Blinky.vqm

5.28. Executing Verilog backend.
Dumping module `\Blinky'.

End of script. Logfile hash: 644b689554
CPU: user 0.18s system 0.02s, MEM: 40.80 MB total, 20.07 MB resident
Yosys 0.7+377 (git sha1 68e2bdf, gcc 5.4.0-6ubuntu1~16.04.4 -O3 -DNDEBUG -fPIC -fno-builtin-malloc -fno-builtin-free -fno-builtin-realloc -fno-builtin-calloc -fno-builtin-cfree -fno-builtin-valloc -fno-builtin-pvalloc -fno-builtin-memalign -fno-builtin-posix_memalign)
Time spent: 23% 13x read_verilog (0 sec), 17% 3x techmap (0 sec), ...
